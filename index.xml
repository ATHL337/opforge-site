<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Welcome to OPFORGE on OPFORGE</title><link>https://opforge.dev/</link><description>Recent content in Welcome to OPFORGE on OPFORGE</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 10 May 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://opforge.dev/index.xml" rel="self" type="application/rss+xml"/><item><title>About OPFORGE</title><link>https://opforge.dev/about/</link><pubDate>Sat, 10 May 2025 00:00:00 +0000</pubDate><guid>https://opforge.dev/about/</guid><description>What is OPFORGE? OPFORGE stands for Offensive Posture + FORensics + Generation &amp;amp; Engineering. It&amp;rsquo;s a purpose-built cybersecurity lab environment designed to:
🛠️ Emulate adversary behavior 🔍 Ingest and enrich telemetry from Windows and Linux endpoints 🧠 Apply explainable AI to triage and surface detections 📚 Document real-world operator workflows Whether you&amp;rsquo;re reverse-engineering a malware sample, developing YARA rules, or building detection pipelines with SOF-ELK, OPFORGE is designed to mirror the complexity and realism of mission-ready cyber defense.</description></item><item><title>Building the OPFORGE Website</title><link>https://opforge.dev/posts/site-setup/</link><pubDate>Sat, 10 May 2025 00:00:00 +0000</pubDate><guid>https://opforge.dev/posts/site-setup/</guid><description>This post documents the process of building the official website for OPFORGE, a cybersecurity lab project focused on detection engineering, threat emulation, and explainable AI.
🔧 Tooling Stack Hugo – Static site generator (v0.147.1) PaperMod – Lightweight, responsive Hugo theme GitHub Pages – CI/CD-backed static hosting Cloudflare DNS – Domain and HTTPS management Custom Domain – https://opforge.dev 🧱 Build Process Created site: hugo new site opforge-site --format yaml Installed theme: git submodule add https://github.</description></item><item><title>Exporting Winlogbeat Logs to SOF-ELK</title><link>https://opforge.dev/docs/winlogbeat-export/</link><pubDate>Sat, 10 May 2025 00:00:00 +0000</pubDate><guid>https://opforge.dev/docs/winlogbeat-export/</guid><description>🔍 Purpose Enable structured Windows event logs to flow from OPFORGE&amp;rsquo;s Windows Member VM to SOF-ELK using Winlogbeat, a JSON exporter, and PowerShell automation.
✅ Prerequisites Windows 10/11 host joined to domain (e.g., OPF-MBR01) Winlogbeat installed and configured SSH access to SOF-ELK (e.g., elk_user@192.168.77.40) Valid PuTTY key pair (.ppk) for SCP transfers (if using PSCP) Target folder on SOF-ELK writable by elk_user (e.g., /logstash/kape/) 🔧 Check–Do–Check Workflow 🔍 Check Confirm Winlogbeat is writing .</description></item><item><title>OPFORGE Status Overview</title><link>https://opforge.dev/docs/status/</link><pubDate>Sat, 10 May 2025 00:00:00 +0000</pubDate><guid>https://opforge.dev/docs/status/</guid><description>🧭 Project Status: OPFORGE This page tracks the current progress of OPFORGE—covering infrastructure setup, log ingestion, threat emulation, and explainable detection pipelines.
✅ Foundation &amp;amp; Deployment Area Status Notes Domain Purchased ✅ opforge.dev via Cloudflare Hugo Static Site Created ✅ With PaperMod theme GitHub Repo Initialized ✅ opforge-site GitHub Actions CI/CD ✅ Deploys on push to main GitHub Pages Configured ✅ Using gh-pages branch Custom Domain Mapped ✅ Site live at https://opforge.</description></item><item><title>SOF-ELK Setup &amp; Ingestion</title><link>https://opforge.dev/docs/sof-elk/</link><pubDate>Sat, 10 May 2025 00:00:00 +0000</pubDate><guid>https://opforge.dev/docs/sof-elk/</guid><description>🔍 Purpose Deploy and configure the SOF-ELK stack for ingestion of structured JSON logs from Winlogbeat and other sources inside the OPFORGE lab.
✅ Prerequisites VMware Workstation Pro VM: OPF-LOG01 Latest SOF-ELK Ubuntu-based image deployed Static IP assignment (e.g., 192.168.77.40) Inbound SSH/SCP and port 5044 (Beats input) allowed JSON-formatted Winlogbeat files structured for ingest 🔧 Check–Do–Check Workflow 🔍 Check Confirm network interface and IP: ip a ip route ping -c 3 8.</description></item></channel></rss>